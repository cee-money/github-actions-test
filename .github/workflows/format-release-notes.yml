name: FORMAT_RELEASE_NOTES

on: workflow_dispatch

jobs:
  format_release_notes:
    runs-on: comcast-runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest tag and set name as var
        id: var
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --abbrev=0 --max-count=1))
          echo "latest_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT

      - name: Get corresponding release notes and set body as var
        id: release
        env:
          URL: https://api.github.com/cee-money/github-actions-test/releases/tags/${{ steps.var.outputs.latest_tag }}
          GITHUB_TOKEN: ${{ secrets.GHE_ACCESS_TOKEN }}
        run: |
          GET_RELEASE_RESULT=$(curl --header "Accept: application/vnd.github+json" --header "Authorization: Bearer $GITHUB_TOKEN" --header "X-GitHub-Api-Version: 2022-11-28" $URL)
          ID=$(echo ${GET_RELEASE_RESULT} | jq '.id')
          BODY=$(echo ${GET_RELEASE_RESULT} | jq '.body')
          echo "id=${ID}" >> $GITHUB_OUTPUT
          echo "body=${BODY}" >> $GITHUB_OUTPUT

      - name: COPY/PASTE formatted notes with Jira links
        uses: "actions/github-script@v6"
        env:
          BODY: ${{ steps.release.outputs.body }}
        with:
          script: |
            const body = process.env.BODY
            const arr = body.split('*').map((line) => {
              const regex = /\[THRIVE-\d+]/g
              const matches = line.match(regex)
              if (!matches) {
                return line
              }
              matches.forEach((match) => {
                line = line.replace(
                  match,
                  `${match}(https://ccp.sys.comcast.net/browse/${match.replace(/[\[\]']+/g, '')})`
                )
              })
              return line
            })
            const modifiedBody = arr.join('*')
            console.log('COPY BELOW:', `\n\n${modifiedBody}`)
